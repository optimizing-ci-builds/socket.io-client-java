name: CI

on: [push]

jobs:
  verify:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        java: [7, 8, 11]

    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas
          pip install numpy
      - run: sudo apt update
      - run: sudo apt install inotify-tools
      - run: inotifywait -mr /home/runner/work/socket.io-client-java/socket.io-client-java/ --format '%T;%w;%f;%e' --timefmt %T -o /home/runner/inotify-logs.csv & echo 'optimizing-ci-builds'
      - run: touch starting_verify_uses-checkout_18
      - run: rm starting_verify_uses-checkout_18
      - uses: actions/checkout@v2
      - run: touch starting_verify_Setupjava_19
      - run: rm starting_verify_Setupjava_19
      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - run: touch starting_verify_CacheMavenpackages_23
      - run: rm starting_verify_CacheMavenpackages_23
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - run: touch starting_verify_SetupNodejs_29
      - run: rm starting_verify_SetupNodejs_29
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - run: touch starting_verify_RuntheMavenverifyphase_33
      - run: rm starting_verify_RuntheMavenverifyphase_33
      - name: Run the Maven verify phase
        run: mvn verify -Dgpg.skip=true
      - run: touch starting_finished_finished_8979874
        if: always()
      - run: rm starting_finished_finished_8979874
        if: always()
      - name: rat check
        if: always()
        run: |
           if [ -f /home/runner/work/socket.io-client-java/socket.io-client-java/target/rat.txt ]; then cat /home/runner/work/socket.io-client-java/socket.io-client-java/target/rat.txt; fi
      - name: Check script file exists and execute
        if: always()
        run: |
          [ -f .github/workflows/script.py ] && python .github/workflows/script.py
          [ -f /home/runner/work/socket.io-client-java/socket.io-client-java/optimizing-ci-builds-ci-analysis/job.csv ] || mkdir -p /home/runner/work/socket.io-client-java/socket.io-client-java/optimizing-ci-builds-ci-analysis/; echo "${GITHUB_RUN_ID},${GITHUB_JOB},socket.io-client-java,${GITHUB_WORKFLOW}" > /home/runner/work/socket.io-client-java/socket.io-client-java/optimizing-ci-builds-ci-analysis/job.csv
      - name: Checkout to destination CI-analyzes repo
        uses: actions/checkout@v3
        if: always()
        with:
          path: socket.io-client-java
          ref: '1687017076-548a464'
          repository: 'UT-SE-Research/ci-analyzes'
          token: '${{ secrets.API_TOKEN_GITHUB }}'
          persist-credentials: true
      - name: Copy files to push to another directory
        if: always()
        run: |
          mkdir -p socket.io-client-java/socket.io-client-java/.github/workflows/ci/verify_java_${{ matrix.java }}
          cp -rvT optimizing-ci-builds-ci-analysis socket.io-client-java/socket.io-client-java/.github/workflows/ci/verify_java_${{ matrix.java }}
      - run: echo https://github.com/UT-SE-Research/ci-analyzes/tree/1687017076-548a464/socket.io-client-java/.github/workflows/ci/verify_java_${{ matrix.java }}
      - name: Pushes analysis to another repository
        if: always()
        working-directory: socket.io-client-java
        run: |
          commit_message=$GITHUB_REPOSITORY@$GITHUB_WORKFLOW_SHA
          git config --global user.name 'UT-SE-Research'
          git config --global user.email '${{ secrets.EMAIL }}'
          git add .
          git commit -m $commit_message
          while ! git push origin 1687017076-548a464; do
            git pull --rebase origin 1687017076-548a464
            sleep $((RANDOM % 5 + 1))
          done
